// Generated by Dagger (https://google.github.io/dagger).
package com.ztd.interview_test.infrustructure.di;

import com.ztd.interview_test.infrustructure.data.AssetHelper;
import com.ztd.interview_test.infrustructure.data.AssetHelperImp;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideAssetHelperFactory implements Factory<AssetHelper> {
  private final AppModule module;

  private final Provider<AssetHelperImp> assetHelperImpProvider;

  public AppModule_ProvideAssetHelperFactory(
      AppModule module, Provider<AssetHelperImp> assetHelperImpProvider) {
    this.module = module;
    this.assetHelperImpProvider = assetHelperImpProvider;
  }

  @Override
  public AssetHelper get() {
    return provideInstance(module, assetHelperImpProvider);
  }

  public static AssetHelper provideInstance(
      AppModule module, Provider<AssetHelperImp> assetHelperImpProvider) {
    return proxyProvideAssetHelper(module, assetHelperImpProvider.get());
  }

  public static AppModule_ProvideAssetHelperFactory create(
      AppModule module, Provider<AssetHelperImp> assetHelperImpProvider) {
    return new AppModule_ProvideAssetHelperFactory(module, assetHelperImpProvider);
  }

  public static AssetHelper proxyProvideAssetHelper(
      AppModule instance, AssetHelperImp assetHelperImp) {
    return Preconditions.checkNotNull(
        instance.provideAssetHelper(assetHelperImp),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
