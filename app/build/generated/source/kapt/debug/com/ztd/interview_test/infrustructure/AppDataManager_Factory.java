// Generated by Dagger (https://google.github.io/dagger).
package com.ztd.interview_test.infrustructure;

import com.google.gson.Gson;
import com.ztd.interview_test.infrustructure.data.AssetHelper;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class AppDataManager_Factory implements Factory<AppDataManager> {
  private final Provider<AssetHelper> assetHelperProvider;

  private final Provider<Gson> gsonProvider;

  public AppDataManager_Factory(
      Provider<AssetHelper> assetHelperProvider, Provider<Gson> gsonProvider) {
    this.assetHelperProvider = assetHelperProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public AppDataManager get() {
    return provideInstance(assetHelperProvider, gsonProvider);
  }

  public static AppDataManager provideInstance(
      Provider<AssetHelper> assetHelperProvider, Provider<Gson> gsonProvider) {
    return new AppDataManager(assetHelperProvider.get(), gsonProvider.get());
  }

  public static AppDataManager_Factory create(
      Provider<AssetHelper> assetHelperProvider, Provider<Gson> gsonProvider) {
    return new AppDataManager_Factory(assetHelperProvider, gsonProvider);
  }

  public static AppDataManager newAppDataManager(AssetHelper assetHelper, Gson gson) {
    return new AppDataManager(assetHelper, gson);
  }
}
