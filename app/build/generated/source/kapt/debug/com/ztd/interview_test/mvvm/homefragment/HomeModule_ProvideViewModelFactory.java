// Generated by Dagger (https://google.github.io/dagger).
package com.ztd.interview_test.mvvm.homefragment;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class HomeModule_ProvideViewModelFactory implements Factory<HomeViewModel> {
  private final HomeModule module;

  public HomeModule_ProvideViewModelFactory(HomeModule module) {
    this.module = module;
  }

  @Override
  public HomeViewModel get() {
    return provideInstance(module);
  }

  public static HomeViewModel provideInstance(HomeModule module) {
    return proxyProvideViewModel(module);
  }

  public static HomeModule_ProvideViewModelFactory create(HomeModule module) {
    return new HomeModule_ProvideViewModelFactory(module);
  }

  public static HomeViewModel proxyProvideViewModel(HomeModule instance) {
    return Preconditions.checkNotNull(
        instance.provideViewModel(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
